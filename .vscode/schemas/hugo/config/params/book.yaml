# yaml-language-server: $schema=http://json-schema.org/draft-07/schema
$comment: https://github.com/alex-shpak/hugo-book
$schema: http://json-schema.org/draft-07/schema
$id: https://platen.io/schemas/hugo/config/params/book.json
title: Site Parameters for hugo-book theme
type: object
properties:
  BookTheme:
    $id: "#/BookTheme"
    title: Theme Mode
    description: >-
      Specify whether site should display in light mode, dark mode, or
      automatically switch between modes based on user's browser/os
      preferences.
    type: string
    enum:
      - light
      - dark
      - auto
    default: auto
  BookToC:
    $id: "#/BookToC"
    title: Display TOC
    description: >-
      Controls table of contents visibility on pages.

      You can control the start and end levels with the markup.tableOfContents
      setting. You can also specify this parameter per page in front matter. If
      set on a page, the page value overrides this one for that page.
    type: boolean
    default: true
  BookLogo:
    $id: "#/BookLogo"
    title: Logo Site Path
    description: >-
      Set the path to a logo for the book relative to the site root when live.
      For example, if the logo is `/static/logo.png` in your source files, then
      the path would be `logo.png`.
    type: string
    default: ""
  BookSection:
    $id: "#/BookSection"
    title: Root Menu Section
    description: >-
      Specify the root section to render in the main menu. The child pages
      and sections in the root are rendered in the menu by weight and name.
      The value must be a path in your project content folder. For example,
      to set `content/games` as your root menu section, specify `games`. To
      add all content pages to the site menu, specify `/`.
    type: string
    default: "docs"
  BookRepo:
    $id: "#/BookRepo"
    title: Source Repository URL
    description: >-
      Specify the URL to the source repository for your site. This value is
      used for the 'Last Modified' and `Edit this page` links on your site,
      if enabled.
    type: string
    default: ""
    format: uri
  BookCommitPath:
    $id: "#/BookCommitPath"
    title: Commit Path
    description: >-
      Specify the commit portion of the link to the page's last modified commit
      hash for `doc` page type. Requires BookRepo to be set. This value is used
      to construct the url permalinking to a page's last modified source file in
      your repository. GitHub and Codeberg use `commit`, BitBucket uses
      `commits`, GitLab uses `-/commit`.
    type: string
    enum:
      - commit
      - commits
      - -/commit
    default: commit
  BookEditPath:
    $id: "#/BookEditPath"
    title: Editing URL Segment
    description: >-
      Specify the segment of the URL for your source code repository that allows
      a user to edit a project file directly. Requires BookRepo to be set. If
      this value is specified, every `docs` pages get an 'Edit this page' link.
      For GitHub and GitLab, this value should be `edit/<default branch>`. For
      most newer projects, `main` is the default branch, so the value would be
      `edit/main`.
  BookDateFormat:
    $id: "#/BookDateFormat"
    title: Date Format
    description: >-
      Specify the date format you want to use for blog posts and last modified
      values.
    type: string
    enum:
      - January 2, 2006
      - Mon Jan 2 2006
      - January 2006
      - "2006-01-02"
      - Monday
      - 02 Jan 06 15:04 MST
      - 02 Jan 06 15:04 -0700
      - Mon, 02 Jan 2006 15:04:05 MST
      - Mon, 02 Jan 2006 15:04:05 -0700
    default: January 2, 2006
  BookSearch:
    $id: "#/BookSearch"
    title: Enable Site Search
    description: >-
      Specify whether full site search should be enabled. This may make your
      site slower. You can adjust the configuration for indexing in the `i18n`
      folder on a per-language basis.
    type: boolean
    default: true
  BookComments:
    $id: "#/BookComments"
    title: Enable Comments
    description: >-
      Specify whether to enable comments on all pages. By default, uses Disqus
      for commenting if defined in your hugo configuration. You can choose
      whether comments are enabled on a per-page basis using the frontmatter.
      For more information on configuring Disqus with Hugo, see
      https://gohugo.io/content-management/comments/#configure-disqus
    type: boolean
    default: true
  BookPortableLinks:
    $id: "#/BookPortableLinks"
    title: "Use Portable Links"
    description: >-
      Specify whether to enable portable links and link checks in markdown
      pages. Portable links are meant to work with text editors and let you
      write markdown without needing to use the `{{< relref >}}` shortcode. If
      this setting is enabled, the theme will print a warning when a page
      referenced in markdown doesn't exist.
    type: boolean
    default: true
  BookServiceWorker:
    $id: "#/BookServiceWorker"
    title: Enable Service Worker
    description: >-
      Specify whether to enable a service worker that caches visited pages and
      resources for offline use. This allows users to install your site as a
      progressive web application (PWA) and access your site even when they
      don't have an internet connection.
    type: boolean
    default: true
  BookTranslatedOnly:
    $id: "#/BookTranslatedOnly"
    title: Only Show Translations if Present
    description: >-
      Specify whether the translation drop-down menu should only appear when
      there's a defined translation. By default, the drop-down menu is always
      available when multiple translations exist, even if their content isn't
      defined.
    type: boolean
    default: true
